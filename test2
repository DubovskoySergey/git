catalog-api-artisan:
	${docker_compose_catalog_api} exec api php artisan $(cmd)

edo-api-artisan:
	${docker_compose_edo_api} exec api php artisan $(cmd)

marketplaces-api-artisan:
	${docker_compose_marketplaces_api} exec api php artisan $(cmd)
123
123
123123
123
123
123
1
231
23
1231
32
print-api-artisan:
	${docker_compose_print_api} exec api php artisan $(cmd)

shop-api-artisan:
	${docker_compose_shop_api} exec api php artisan $(cmd)

marking-artisan:
	${docker_compose_marking} exec api php artisan $(cmd)

marking-artisan-companyseeder:
	${docker_compose_marking} exec api php artisan db:seed --class=CompanySeeder
	
edo-api-test:
	${docker_compose_edo_api} exec api sh -c "php artisan config:clear"
	${docker_compose_edo_api} exec api sh -c "DB_HOST=test_db DB_DATABASE=test DB_USERNAME=test DB_PASSWORD=test php artisan test --env=testing --parallel --coverage"

marketplaces-api-test:
	${docker_compose_marketplaces_api} exec api sh -c "php artisan config:clear"
	${docker_compose_marketplaces_api} exec api sh -c "DB_HOST=test_db DB_DATABASE=test DB_USERNAME=test DB_PASSWORD=test php artisan test --env=testing --parallel --coverage"

catalog-api-test:
	${docker_compose_catalog_api} exec api sh -c "php artisan config:clear"
	${docker_compose_catalog_api} exec api sh -c "DB_HOST=test_db DB_DATABASE=test DB_USERNAME=test DB_PASSWORD=test php artisan test --env=testing --parallel"

print-api-test:
	${docker_compose_print_api} exec api sh -c "php artisan config:clear"
	${docker_compose_print_api} exec api sh -c "DB_HOST=test_db DB_DATABASE=test DB_USERNAME=test DB_PASSWORD=test php artisan test --env=testing"

shop-api-test:
	${docker_compose_shop_api} exec api sh -c "php artisan config:clear"
	${docker_compose_shop_api} exec api sh -c "DB_HOST=test_db DB_DATABASE=test DB_USERNAME=test DB_PASSWORD=test php artisan test --env=testing --parallel" #--coverage

marking-test:
	${docker_compose_marking} exec api sh -c "php artisan config:clear"
	${docker_compose_marking} exec api sh -c "APP_ENV=testing DB_HOST=test_db DB_DATABASE=test DB_USERNAME=test DB_PASSWORD=test php artisan test --env=testing --parallel" #--coverage


traefik-recreate:
	${docker_compose_traefik} down -v
	make docker-compose-up-traefik

crm-database-restore:
	${docker_compose_crm_database} exec -i tbb_crm_database mysql -u root --password=${DB_PASS} tbb_crm < data/crm_db/tbb_crm.sql
	${docker_compose_crm_database} exec -i tbb_crm_database mysql -e "CREATE DATABASE tbb;"
	${docker_compose_crm_database} exec -i tbb_crm_database mysql -u root --password=${DB_PASS} tbb_crm < data/crm_db/tbb.sql
